package black.old.spacedrepetitionowl.database

import androidx.lifecycle.LiveData
import androidx.room.*
import black.old.spacedrepetitionowl.models.Subject

@Dao
interface SubjectDao {

    // The `long` return value for insert is used to get the autogenerated primary key id
    // of the Subject that's being entered.
    // https://developer.android.com/training/data-storage/room/accessing-data#convenience-insert
    @Insert
    suspend fun insert(subject: Subject): Long

    @Update
    suspend fun update(subject: Subject)

    @Delete
    suspend fun delete(subject: Subject)

    // No need for coroutines when LiveData is used.
    @Query("SELECT * from sro_subjects WHERE id == :subject_id")
    fun getSubject(subject_id: Long): LiveData<Subject>

    @Query("UPDATE sro_subjects SET notes = :subject_notes where id == :subject_id")
    suspend fun updateSubjectNotes(subject_id: Long, subject_notes: String)

    @Query("SELECT * FROM sro_subjects")
    fun getAllSubjects(): LiveData<List<Subject>>

    @Query("DELETE FROM sro_subjects where id == :subject_id")
    suspend fun deleteBySubjectId(subject_id: Long)

    // Empty out table
    @Query("DELETE FROM sro_subjects")
    suspend fun deleteAll()

}